阻塞队列（生产者消费者模式，线程池会用）：BlockingQueue接口 ——》Queue——》Collection
	当队列是空的时候，从队列中获取元素的操作会被阻塞
	当队列是满的时候，往队列里添加元素的操作将会被阻塞

阻塞队列有7个实现类：
ArrayBlockingQueue：由数组结构组成的有界阻塞队列。
LinkedBlockingQueue:由链表结构组成的有界（但大小默认值为Integer.MAX_VALUE （21亿可以理解为无界））阻塞队列。
SynchronousQueue: 不存储元素的阻塞队列，也即单个元素的队列。

PriortityBlockingQueue：支持优先级排序的无界阻塞队列。
DelayQueue:使用优先级队列实现的延迟加无界阻塞队列
LinkedTransferQueue:由链表结构组成的无界阻塞队列。
LinkedBlockingDeque：由链表结构组成的双向阻塞队列。

有什么好处：
	在多线程领域：所谓阻塞，在某些情况下回挂起线程（阻塞），一旦条件满足，被挂起的线程又会被自动被唤醒
好处是我们不需要关心什么时候需要阻塞，什么时候需要唤醒线程，因为这一切BlockingQueue都给你一手包办了

BlockingQueue核心方法
方法类型		抛出异常		特殊值（boolean）	阻塞		超时

插入		add（e）		offer（e）		put（e）		offer（e，time，unit）

移除		remove（）	poll（）		take（）		poll（time，unit）

检查		element（）	peek（）		不可用		不可用

