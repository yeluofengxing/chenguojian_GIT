JVM调优
       要说一下JVM调优的话，首先JVM是有 堆、栈、方法区，本地方法区，类装载器，程序计数器，执行引擎组成。然后JVM调优的话，
最主要是优化堆，堆得组成部分，包括新生代，Survivor（丝外哦）区，老年代，JVM调优的目标就是减少 FUll GC的频率，因为当FULL GC的时候，会清理整个堆区域，除GC外的所有线程都会被挂起，导致页面卡顿，然后GC又被分为Minor GC ,FULL GC。Minor GC
是新生代区满了之后才会执行，会判断新生代以及survivor区，那些是垃圾数据（就是无引用的内存），并开始清理垃圾数据，不是垃圾的会被放入survivor区，并计数，如果在survivor的计数大于15则会被放入老年区，还有一种情况，就是moinor GC的时候，发现该内存大于survivor区
内存大小一半以上的时候，会被直接放入老年区，minor GC的话也会导致其他线程中断，一般情况下，不需要优化，因为新生代内存一般会配置比较小，不怎么影响，如果特殊情况，新生代内存分配的比较大的话，比如几十个G，这个情况下就需要优化了，可以使用G1垃圾处理器
来设置，默认是当新生代里的数据需要200毫秒来处理的时候执行minor GC，也可以自己配置自定义的时间。一般情况下是处理减少full GC的频率就好了，我们可以通过工具来观察，结合具体的业务场景，来配置各个区的内存大小来达到优化的目的